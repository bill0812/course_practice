source('~/Dropbox/13_NCCU/courses/DataScienceInPractice_資料科學實務/105.2/codes/codes10/projExam/diamonds.R')
getwd()
getwd()
library(tidyverse)
ggplot(diamonds, aes(carat, price)) +
geom_hex()
install.packages('hexbin')
ggplot(diamonds, aes(carat, price)) +
geom_hex()
setwd("~/Dropbox/13_NCCU/courses/DataScienceInPractice_資料科學實務/1061/codes/code10")
library(tidyverse)
heights <- read_csv("heights.csv")
heights_ori <- read.csv("heights.csv")
str(heights_ori)
str(heights)
mod <- lm(mpg ~ wt, data = mtcars)
mod
save(mod, file = "mymodel.rda")
ls()
load(file = "mymodel.rda")
ls()
saveRDS(mod, "mymodel.rds")
mod2 <- readRDS("mymodel.rds")
ls()
identical(mod, mod2, ignore.environment = TRUE)
sessionInfo()
library(knitr)
knit('simple.Rmd')
setwd("~/Dropbox/13_NCCU/courses/DataScienceInPractice_資料科學實務/1061/codes/code11/protein/")
protein <- read.table("protein.txt", sep="\t", header=TRUE)
head(protein)
summary(protein
)
dim(protein)
library(fpc)
kbest.p<-5
pclusters <- kmeans(pmatrix, kbest.p, nstart=100, iter.max=100)
pclusters
pclusters$centers
pclusters$size
groups <- pclusters$cluster
print_clusters(groups, kbest.p)
vars.to.use <- colnames(protein)[-1]
pmatrix <- scale(protein[,vars.to.use])
pcenter <- attr(pmatrix, "scaled:center")
pscale <- attr(pmatrix, "scaled:scale")
library(fpc)
kbest.p<-5
pclusters <- kmeans(pmatrix, kbest.p, nstart=100, iter.max=100)
pclusters
pclusters$centers
pclusters$size
groups <- pclusters$cluster
print_clusters(groups, kbest.p)
groups
pclusters <- kmeans(pmatrix, kbest.p, nstart=100, iter.max=100)
pclusters$ tot .withinss
pclusters <- kmeans(pmatrix, kbest.p, nstart=1, iter.max=100)
pclusters$ tot .withinss
pclusters <- kmeans(pmatrix, kbest.p, nstart=100, iter.max=100)
pclusters$tot .withinss
pclusters <- kmeans(pmatrix, kbest.p, nstart=1, iter.max=100)
pclusters$tot .withinss
pclusters <- kmeans(pmatrix, kbest.p, nstart=100, iter.max=100)
pclusters$tot.withinss
pclusters <- kmeans(pmatrix, kbest.p, nstart=1, iter.max=100)
pclusters$tot.withinss
?kmeans
cboot<-clusterboot(pmatrix, clustermethod=kmeansCBI, runs=100,iter.max=100, krange=kbest.p, seed=15555)
groups <- cboot$result$partition
print_clusters(cboot$result$partition, kbest.p)
cboot$bootmean
cboot$bootbrd
?clusterboot
library(reshape2)
source("../CH.R")
source("../WSS.R")
clustcrit <- ch_criterion(pmatrix, 10, method="hclust")
critframe <- data.frame(k=1:10, ch=scale(clustcrit$crit), wss=scale(clustcrit$wss))
critframe <- melt(critframe, id.vars=c("k"), variable.name="measure", value.name="score")
ggplot(critframe, aes(x=k, y=score, color=measure)) +
geom_point(aes(shape=measure)) + geom_line(aes(linetype=measure)) +
scale_x_continuous(breaks=1:10, labels=1:10)
library(ggplot2)
library(reshape2)
source("../CH.R")
source("../WSS.R")
clustcrit <- ch_criterion(pmatrix, 10, method="hclust")
critframe <- data.frame(k=1:10, ch=scale(clustcrit$crit), wss=scale(clustcrit$wss))
critframe <- melt(critframe, id.vars=c("k"), variable.name="measure", value.name="score")
ggplot(critframe, aes(x=k, y=score, color=measure)) +
geom_point(aes(shape=measure)) + geom_line(aes(linetype=measure)) +
scale_x_continuous(breaks=1:10, labels=1:10)
clustering.ch <- kmeansruns(pmatrix, krange=1:10, criterion="ch")
clustering.ch$bestk
clustering.ch$crit
critframe <- data.frame(k=1:10, ch=scale(clustering.ch$crit),
asw=scale(clustering.asw$crit))
critframe <- melt(critframe, id.vars=c("k"), variable.name="measure", value.name="score")
ggplot(critframe, aes(x=k, y=score, color=measure)) +geom_point(aes(shape=measure)) + geom_line(aes(linetype=measure)) + scale_x_continuous(breaks=1:10, labels=1:10)
clustering.ch <- kmeansruns(pmatrix, krange=1:10, criterion="ch")
clustering.ch$bestk
clustering.ch$crit
d <- dist(pmatrix, method="euclidean")
pfit <- hclust(d,method="complete")
plot(pfit, labels=protein$Country)
rect.hclust(pfit, k=5)
library(arules)
bookbaskets <- read.transactions("bookdata.tsv.gz", format="single",
sep="\t",
cols=c("userid", "title"),
rm.duplicates=T)
setwd("../books/")
library(arules)
bookbaskets <- read.transactions("bookdata.tsv.gz", format="single",
sep="\t",
cols=c("userid", "title"),
rm.duplicates=T)
class(bookbaskets)
bookbaskets
dim(bookbaskets)
colnames(bookbaskets)[1:5]
rownames(bookbaskets)[1:5]
#the distribution of transaction sizes
basketSizes <- size(bookbaskets)
summary(basketSizes)
quantile(basketSizes, probs=seq(0,1,0.1))
library(ggplot2)
ggplot(data.frame(count=basketSizes))+ geom_density(aes(x=count), binwidth=1)+ scale_x_log10()
bookFreq <- itemFrequency(bookbaskets)
sum(bookFreq)
bookCount <- (bookFreq/sum(bookFreq))*sum(basketSizes)
summary(bookCount)
orderedBooks <- sort(bookCount, decreasing=T)
orderedBooks[1:10]
orderedBooks[1]/dim(bookbaskets)[1]
bookbaskets_use <- bookbaskets[basketSizes > 1]
dim(bookbaskets_use)
dim(bookbaskets)
100/dim(bookbaskets_use)[1]
rules <- apriori(bookbaskets_use, parameter =list(support = 0.002, confidence=0.75))
summary(rules)
measures <- interestMeasure(rules,
measure=c("coverage", "fishersExactTest"),
transactions=bookbaskets_use)
inspect(head((sort(rules, by="confidence")), n=5))
brules <- apriori(bookbaskets_use,
parameter =list(support = 0.001, confidence=0.6),
appearance=list(rhs=c("The Lovely Bones: A Novel"),
default="lhs"))
summary(brules)
brulesConf <- sort(brules, by="confidence")
inspect(head(lhs(brulesConf), n=5))
\
brulesConf <- sort(brules, by="confidence")
inspect(head(lhs(brulesConf), n=5))
brulesSub <- subset(brules, subset=!(lhs %in% "Lucky : A Memoir"))
brulesConf <- sort(brulesSub, by="confidence")
inspect(head(lhs(brulesConf), n=5))
